#!/usr/bin/bash
set -e

#### HARDWARE CONFIGURATION
CURRHOSTNAME=`hostname`
HOSTNAME="dgtcentaur"
CONFIG="/boot/config.txt"
SETUP_DIR="/home/pi/DGTCentaurMods"
CMDLINEFILE="/boot/cmdline.txt"
BTPIN="* *"
BTMACHINEINFO="PRETTY_HOSTNAME=PCS-REVII-081500"
BTSERVICE="/etc/systemd/system/bluetooth.target.wants/bluetooth.service"
CENTAUR_ENGINE="/home/pi/centaur/engine"
STOCKFISH="stockfish_pi"

case $1 in
install* )

echo -e "Hardware configuration"
echo -e "Backup first"
cp $CONFIG $CONFIG.bak
cp $CMDLINEFILE $CMDLINEFILE.bak

# Enabke SPI bus if not enbaled
echo "::: Checking SPI"
    SPION=`cat $CONFIG | grep "^#dtparam=spi=on"`
    SPI10=`cat $CONFIG | grep "^dtoverlay=spi1-3cs"`
    if [ ! -z $SPION ]
    then
        sed -i "s/#dtparam=spi=on/dtparam=spi=on/g" $CONFIG
    else
        sed -i "$ a dtparam=spi=on" $CONFIG
    fi    
    
    echo -e ":::::: Checking SPI 1.0 bus.\n"
    if [ -z $SPI10 ]
    then
        sed -i "$ a dtoverlay=spi1-3cs" $CONFIG
    fi

echo "::: Checking serial port. "
    UARTON=`cat $CONFIG | grep "^#enable_uart=1"`
    if [ ! -z $UARTON ]
    then
        echo "::: Enabling serial port..."
        sed -i "s/#enable_uart=1.*/enable_uart=1/g" $CONFIG
    else
        sed -i "$ a enable_uart=1" $CONFIG
    fi

    echo -e "::: Disable console on ttyS0\n"
        REPLY=$(sed 's/[^ ]* *//' $CMDLINEFILE)
        echo -e "$REPLY" > $CMDLINEFILE

    # Setting up Bluetooth
    echo -e "::: Setting up bluetooth."
        echo -e "$BTPIN" > /etc/bluetooth/pin.conf
        echo -e "$BTMACHINEINFO" > /etc/machine-info

##### Enable systemd services.
echo -e "Services setup\n"
    systemctl daemon-reload
    systemctl enable rfcomm.service
    systemctl enable centaurmods-web.service
    systemctl enable DGTCentaurMods.service
    systemctl enable ntp

# Update bluetooth service
    echo -e "Updating bluetooth service."
    REPLACE="ExecStart=/usr/lib/bluetooth/bluetoothd --compat --noplugin=sap,battery"
    REPLACE=$(sed 's/[^a-zA-Z0-9]/\\&/g' <<<"$REPLACE")
    sed -i "s/^ExecStart.*/$REPLACE/g" $BTSERVICE

   systemctl daemon-reload

# Update rc.local
    cp /etc/rc.local /etc/rc.local.bak
    sed -i "$ a	sudo hcitool cmd 0x3f 0x001 0x66 0x66 0x77 0x77 0x88 0x88\n\
sudo sdptool add SP & \n\
\n\
sudo bluetoothctl <<EOF \n\
power on \n\
agent on \n\
discoverable on \n\
pairable on \n\
EOF" /etc/rc.local
    
function update_hostname {
    sed -i "s/$CURRHOSTNAME/$HOSTNAME/g" /etc/hosts
    sed -i "s/$CURRHOSTNAME/$HOSTNAME/g" /etc/hostname
}

# Install Stockfish if in build
echo -e "::: Installing Stockfish engine"
if [[ -e ${SETUP_DIR}/engines/$STOCKFISH ]]
then
    if [[ -d $CENTAUR_ENGINE ]]
    then
        mv ${SETUP_DIR}/engines/$STOCKFISH $CENTAUR_ENGINE
    else
        mkdir -p $CENTAUR_ENGINE
        mv ${SETUP_DIR}/engines/$STOCKFISH $CENTAUR_ENGINE
    fi
else
    echo -e "Downloading Stockfish..."
    # TODO: find a way to download.
fi
chown -R pi.pi $CENTAUR_ENGINE

# Check if pip is installed
if sudo dpkg -l | grep -q python3-pip
then
    echo "::: Pip is installed."
else
    echo "::: Pip not installed. Installing now..."
    sudo apt-get install -y python3-pip
fi

echo -e "::: Installing python packages.\n"
    cd $SETUP_DIR
    pip3 install -r $SETUP_DIR/requirements.txt

function add_lichess_key {
CENTAURINI=/home/pi/DGTCentaurMods/config/centaur.ini
read -p "Lichess API token: "
sed -i "s/^api_token.*/api_token = $REPLY/g" $CENTAURINI
}

# Setting up lichess key
echo -e "\n\n"
read -p "Do you have a Lichess API token? (y/n): "
case $REPLY in
    [Yy]* ) add_lichess_key;;
    [Nn]* )
        exit
        ;;
    * ) ;;
esac

update_hostname

exit 0
;;

upgrade *)
;;

esac
