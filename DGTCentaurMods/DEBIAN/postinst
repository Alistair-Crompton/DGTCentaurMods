#!/bin/bash

ARCH=`uname -m`
CONFIG="/boot/config.txt"
PACKAGE="DGTCentaurMods"
DGTCM_PATH="/opt/${PACKAGE}"
CMDLINEFILE="/boot/cmdline.txt"
CENTAUR="/home/pi/centaur/"
CENTAUR_ENGINE="/home/pi/centaur/engines"
STOCKFISH="stockfish_pi"
RODENT_REPO="https://github.com/nescitus/rodent-iv.git"
MAIA_REPO="https://github.com/CSSLab/maia-chess.git"
FENLOG="/home/pi/centaur/fen.log"


if ! cat $CONFIG | grep -q "#dgtcentaurmods"
then
    echo -e "::: Hardware configuration."
    echo -e "::: Backup few files."
    cp $CONFIG $CONFIG.bak
    cp $CMDLINEFILE $CMDLINEFILE.bak

    # Enable SPI bus if not enabled
    echo "::: Checking SPI"
        SPION=`cat $CONFIG | grep "^#dtparam=spi=on"`
        SPI10=`cat $CONFIG | grep "^dtoverlay=spi1-3cs"`
    if [ ! -z $SPION ]
    then
        sed -i "s/#dtparam=spi=on/dtparam=spi=on/g" $CONFIG
    else
        sed -i "$ a dtparam=spi=on" $CONFIG
    fi    
    
    echo -e "::: Checking SPI 1.0 bus."
    if [ -z $SPI10 ]
    then
        sed -i "$ a dtoverlay=spi1-3cs" $CONFIG
    fi

echo "::: Checking serial port."
    UARTON=`cat $CONFIG | grep "^#enable_uart=1"`
    if [ ! -z $UARTON ]
    then
        echo "::: Enabling serial port."
        sed -i "s/#enable_uart=1.*/enable_uart=1/g" $CONFIG
    else
        sed -i "$ a enable_uart=1" $CONFIG
    fi
    # Mark file as modified
    sed -i "$ a #dgtcentaurmods" $CONFIG
fi

if cat $CMDLINEFILE | grep -q "console=serial0"
then
    echo -e "::: Disable console on ttyS0"
        REPLY=$(sed 's/[^ ]* *//' $CMDLINEFILE)
        echo -e "$REPLY" > $CMDLINEFILE
fi

# Make DGTCM available to all users
rm /usr/lib/python3/dist-packages/${PACKAGE}
cd /usr/lib/python3/dist-packages && sudo ln -s ${DGTCM_PATH} ${PACKAGE}

# Allow flask on port 80
sudo touch /etc/authbind/byport/80
sudo chmod 777 /etc/authbind/byport/80

# Enable systemd services.
echo -e "::: Setup services."
    systemctl daemon-reload
    systemctl enable ${PACKAGE}Web.service
    systemctl enable ${PACKAGE}.service
    systemctl enable ntp

systemctl daemon-reload

#Check if CENTAUR directory exists
if [ ! -d $CENTAUR ]
then
    mkdir $CENTAUR
fi

#Check if CENTAUR engine directory exists
if [ ! -d $CENTAUR_ENGINE ]
then
    mkdir $CENTAUR_ENGINE
fi

#Check if fen.log exists
if [ ! -e $FENLOG ]
then
    touch $FENLOG
fi

# Install Stockfish if in build
if [[ -e ${DGTCM_PATH}/engines/$STOCKFISH ]]
then
    echo -e "::: Installing Stockfish engine."
    if [[ -d $CENTAUR_ENGINE ]]
    then
        mv ${CENTAUR_ENGINE}/$STOCKFISH ${CENTAUR_ENGINE}/$STOCKFISH.bak
        mv ${DGTCM_PATH}/engines/$STOCKFISH $CENTAUR_ENGINE/$STOCKFISH
        chown -R pi.root $CENTAUR_ENGINE
    else
        mkdir -p $CENTAUR_ENGINE
        mv ${DGTCM_PATH}/engines/$STOCKFISH $CENTAUR_ENGINE
        chown -R pi.root $CENTAUR_ENGINE
    fi
fi

# Check if pip is installed
if sudo dpkg -l | grep -q python3-pip
then
    echo "::: Pip is installed."
else
    echo "::: Pip not installed. Installing now..."
    sudo apt-get install -y python3-pip
fi

echo -e "::: Installing python packages."
    cd $DGTCM_PATH
    CFLAGS="-fcommon" pip3 install -r $DGTCM_PATH/config/pip-requirements.txt


function insertMaia {
    if [[ $ARCH == "armv6"* ]]; then
        #Remove maia and don't get weights
        echo -e "::: This system is not compatible with maia engine."
        rm -rf ${DGTCM_PATH}/engines/maia* > /dev/null 2>&1
        return
    fi
    if [ ! -d  ${DGTCM_PATH}/tmp ]
    then
        mkdir ${DGTCM_PATH}/tmp
    fi
    if [ ! -d ${DGTCM_PATH}/tmp/maia-chess ]
    then
        git clone --depth 1 $MAIA_REPO ${DGTCM_PATH}/tmp/maia-chess;
        if (($? > 0))
            then echo "git clone maia chess failed with $?"
        fi
    fi
    cp -rn ${DGTCM_PATH}/tmp/maia-chess/maia_weights ${DGTCM_PATH}/engines/
    cp -n ${DGTCM_PATH}/engines/maia_weights/maia-1900.pb.gz ${DGTCM_PATH}/engines/
    chmod 755 ${DGTCM_PATH}/engines/maia
}

function insertRodentIV {
    if [ ! -d  ${DGTCM_PATH}/tmp ]
    then
        mkdir ${DGTCM_PATH}/tmp
    fi
    if [ ! -d ${DGTCM_PATH}/tmp/rodent-iv ]
    then
        git clone --depth 1 $RODENT_REPO ${DGTCM_PATH}/tmp/rodent-iv;
        if (($? > 0))
            then echo "git clone rodentiv failed with $?"
        fi
    fi
    cp -rn ${DGTCM_PATH}/tmp/rodent-iv/personalities ${DGTCM_PATH}/engines/
    cp -rn ${DGTCM_PATH}/tmp/rodent-iv/books ${DGTCM_PATH}/engines/
    chmod 744 ${DGTCM_PATH}/engines/rodentIV
}

function insertZahak {
    chmod 755 ${DGTCM_PATH}/engines/zahak
}

insertMaia
insertRodentIV
insertZahak

# Setting final permissions
function setPermissions {
    echo -e "::: Setting permissions."
    sudo chown -R pi.pi ${DGTCM_PATH}
    sudo chown -R pi.root $CENTAUR

}

function copyDefaults {
    echo -e "::: Copying default values."
    cp -rn ${DGTCM_PATH}/defaults/* ${DGTCM_PATH}/
}

case $1 in
    configure* )

    copyDefaults
    setPermissions

    echo -e "::: Done. You can reboot."
    ;;
esac

exit 0

